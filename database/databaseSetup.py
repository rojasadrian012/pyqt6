import sqlite3
import random
class DatabaseSetup:

    @staticmethod
    def connection():
        return sqlite3.connect("database/database.db") 
    
    @staticmethod
    def createTables():
        db = DatabaseSetup.connection()
        cursor = db.cursor()

        cursor.execute("""
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT,
                user TEXT UNIQUE,
                password TEXT
            );
        """)

        cursor.execute("""
            CREATE TABLE IF NOT EXISTS products (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT,
                description TEXT,
                category TEXT,
                price INTEGER,
                isImported BOOLEAN,
                quantity INTEGER
            );
        """)

        db.commit()
        db.close()
        print("Tablas creadas correctamente.")

        DatabaseSetup.createUserAdmin()
        DatabaseSetup.insertSampleProducts()

    @staticmethod
    def verifyAndSetup():
        db = DatabaseSetup.connection()
        cursor = db.cursor()
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='users';")
        table_exists = cursor.fetchone()  # üîπ Retorna None si la tabla no existe

        db.close()

        if table_exists is None:
            print("‚ö†Ô∏è La base de datos est√° vac√≠a. Creando estructura...")
            DatabaseSetup.createTables()
        else:
            print("‚úÖ Las tablas 'users' y 'products' existen en la base de datos.")

    @staticmethod
    def createUserAdmin():
        try:
            db = DatabaseSetup.connection()
            db.cursor().execute(""" 
                INSERT OR IGNORE INTO users (name, user, password) 
                VALUES ('Admin', 'admin', 'admin');
            """)  
            db.commit()
            db.close()
        except Exception as e:
            print("Error al crear el usuario admin:", e)

    @staticmethod
    def insertSampleProducts():
        productos = [
            ("Laptop", "Laptop de alto rendimiento con 16GB RAM", "Electr√≥nicos"),
            ("Celular", "Smartphone con pantalla OLED", "Electr√≥nicos"),
            ("Auriculares", "Auriculares Bluetooth con cancelaci√≥n de ruido", "Electr√≥nicos"),
            ("Teclado mec√°nico", "Teclado gamer RGB con switches azules", "Electr√≥nicos"),
            ("Monitor", "Monitor 27'' con resoluci√≥n 4K", "Electr√≥nicos"),
            ("Camisa", "Camisa formal de algod√≥n", "Ropa"),
            ("Jeans", "Pantal√≥n de mezclilla azul", "Ropa"),
            ("Zapatillas", "Zapatillas deportivas para correr", "Ropa"),
            ("Chaqueta", "Chaqueta de cuero negra", "Ropa"),
            ("Reloj", "Reloj de pulsera con correa de cuero", "Ropa"),
            ("Pan", "Pan artesanal con masa madre", "Alimentos"),
            ("Leche", "Leche descremada en envase de 1L", "Alimentos"),
            ("Queso", "Queso gouda en rodajas", "Alimentos"),
            ("Manzanas", "Manzanas rojas frescas", "Alimentos"),
            ("Chocolate", "Tableta de chocolate amargo 70%", "Alimentos"),
            ("Tablet", "Tablet con pantalla AMOLED de 10 pulgadas", "Electr√≥nicos"),
            ("Smartwatch", "Reloj inteligente con monitor de frecuencia card√≠aca", "Electr√≥nicos"),
            ("C√°mara", "C√°mara fotogr√°fica profesional con lente 50mm", "Electr√≥nicos"),
            ("Router WiFi", "Router de alta velocidad con WiFi 6", "Electr√≥nicos"),
            ("Impresora", "Impresora multifuncional a color", "Electr√≥nicos"),
            ("Consola de videojuegos", "Consola de √∫ltima generaci√≥n con 2 controles", "Electr√≥nicos"),
            ("Disco SSD", "Disco de estado s√≥lido de 1TB", "Electr√≥nicos"),
            ("Mouse inal√°mbrico", "Mouse ergon√≥mico con sensor √≥ptico", "Electr√≥nicos"),
            ("Altavoz Bluetooth", "Altavoz port√°til con sonido envolvente", "Electr√≥nicos"),
            ("Cargador port√°til", "Power bank de 20,000mAh", "Electr√≥nicos"),
            ("Sudadera", "Sudadera con capucha de algod√≥n", "Ropa"),
            ("Bufanda", "Bufanda de lana gruesa para invierno", "Ropa"),
            ("Pantal√≥n de vestir", "Pantal√≥n elegante para oficina", "Ropa"),
            ("Gorra", "Gorra de b√©isbol ajustable", "Ropa"),
            ("Vestido", "Vestido casual para verano", "Ropa"),
            ("Calcetines", "Pack de 5 pares de calcetines t√©rmicos", "Ropa"),
            ("Shorts deportivos", "Shorts ligeros para correr", "Ropa"),
            ("Chaleco", "Chaleco acolchonado para invierno", "Ropa"),
            ("Botas", "Botas de cuero resistentes al agua", "Ropa"),
            ("Guantes", "Guantes t√°ctiles para uso con smartphones", "Ropa"),
            ("Cereal", "Cereal integral sin az√∫car", "Alimentos"),
            ("Jugo de naranja", "Jugo de naranja 100% natural", "Alimentos"),
            ("Caf√©", "Caf√© en grano de origen colombiano", "Alimentos"),
            ("T√© verde", "T√© verde en sobres con antioxidantes", "Alimentos"),
            ("Miel", "Miel pura de abeja en frasco de 500ml", "Alimentos"),
            ("Yogur", "Yogur natural sin az√∫car a√±adido", "Alimentos"),
            ("Frijoles", "Frijoles negros enlatados", "Alimentos"),
            ("Arroz", "Arroz blanco de grano largo", "Alimentos"),
            ("Aceite de oliva", "Aceite de oliva extra virgen", "Alimentos"),
            ("Galletas", "Galletas integrales con chispas de chocolate", "Alimentos"),
            ("Helado", "Helado de vainilla sin conservantes", "Alimentos"),
            ("Salsa de tomate", "Salsa de tomate org√°nica", "Alimentos"),
            ("Pasta", "Pasta italiana de trigo duro", "Alimentos"),
            ("At√∫n en lata", "At√∫n en agua con bajo contenido de sodio", "Alimentos"),
            ("Nueces", "Mix de nueces y frutos secos", "Alimentos")
        ]

        db = DatabaseSetup.connection()
        cursor = db.cursor()
                
        sql_insert_product = """
            INSERT INTO products (name, description, category, price, isImported, quantity)
            VALUES (?, ?, ?, ?, ?, ?);
        """

        for _ in range(50):
            name, descripcion, categoria = random.choice(productos)
            price = random.randint(10, 500) 
            isImported = random.choice([0, 1]) 
            quantity = random.randint(1, 100) 
            cursor.execute(sql_insert_product, (name, descripcion, categoria, price, isImported, quantity))
          
        db.commit()
        db.close()
        print("Se insertaron 50 productos aleatorios.")
